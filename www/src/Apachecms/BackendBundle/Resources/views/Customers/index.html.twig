{% extends "ApachecmsBackendBundle::layout.html.twig" %}
{% block body %} 
{{ parent()}}
<h3 class="card-title">
    {% if app.request.attributes.get('_route_params')._breadcrumbs is defined %}
        Lista de {{ (app.request.attributes.get('_route_params')['_breadcrumbs']|last)['label'] }}
    {% endif %}
    {# <button type="button" class="btn btn-success btn-rounded pull-right" onclick="location.href='{{ path(pathBase~'_add')}}'"><i class="fa fa-plus"></i> Agregar</button> #}
</h3>
<div class="table-responsive">
    <table id="{{ pathBase }}_dataTable" class="table table-striped table-bordered dt-responsive nowrap" cellspacing="0" width="100%">
    </table>
</div>

{{ form_start(formDelete, {'attr': {'id':id|default('formDelete')}}) }}
{{ form_widget(formDelete) }}
{{ form_end(formDelete) }}

{% endblock body %} 
{% block javascripts %} 
{{ parent() }}
{% include 'ApachecmsBackendBundle:_partials:dataTableScripts.html.twig' with { pathBase:pathBase } %}
<script type="text/javascript">
    $(function () {
        $('#{{ pathBase }}_dataTable').DataTable({
            order: [[ 5, 'desc' ]],
            columns: [
                { title:"Nombre",data: "c_name" },
                { title:"Email",data: "email" },
                { 
                    
                    title: 'Proveedor',
                    className: 'text-center',
                    render: function (data, type, row) 
                    {
                        if(row.facebookId){
                            return 'Facebook';
                        }else if(row.googleId){
                            return 'Google';
                        }else{
                            return 'Email';
                        }
                    }
                },
                { 
                    data: 'profileIsComplete', 
                    title: 'Perfil completo',
                    className: 'text-center',
                    render: function (data, type, row) 
                    {
                        switch (data){
                            case true:
                                return '<span class="badge badge-pill badge-success">SI</span>';
                                break;
                            default:
                                return '<span class="badge badge-pill badge-danger">NO</span>';
                                break;
                        }
                    }
                },
                { 
                    data: 'isLocked', 
                    title: 'Boqueado',
                    className: 'text-center',
                    render: function (data, type, row) 
                    {
                        switch (data){
                            case true:
                                return '<span class="badge badge-pill badge-danger">SI</span>';
                                break;
                            case null:
                                return '<span class="badge badge-pill badge-warning">N/E</span>';
                                break;
                            default:
                                return '<span class="badge badge-pill badge-success">NO</span>';
                                break;
                        }
                    }
                },
                { 
                    data: 'useTrial', 
                    title: 'Trial',
                    className: 'text-center',
                    render: function (data, type, row) 
                    {
                        switch (data){
                            case true:
                                return '<span class="badge badge-pill badge-danger">SI</span>';
                                break;
                            case null:
                                return '<span class="badge badge-pill badge-warning">N/E</span>';
                                break;
                            default:
                                return '<span class="badge badge-pill badge-success">NO</span>';
                                break;
                        }
                    }
                },
                { 
                    title:"Creado",
                    data: "createdAt",
                    render: function (data, type, JsonResultRow, meta) {
                        var d = new Date(data.timestamp * 1000);
                        return `${(d.getDate()<10?'0':'') + d.getDate()}/${(d.getMonth()+1)}/${d.getFullYear()} ${(d.getHours()<10?'0':'') + d.getHours()}:${(d.getMinutes()<10?'0':'') + d.getMinutes()}`;
                    }
                },
                {
                    data: null,
                    orderable: false,
                    className: "text-center",
                    defaultContent: `
                    <button type="button" title="Ver" class="btn-view btn btn-outline-info btn-circle"><i class="fa fa-eye"></i></button>`
                }
            ]
        });
    });
    $('#{{ pathBase }}_dataTable').on('click', 'button.btn-view', function () {
        var data = $('#{{ pathBase }}_dataTable').DataTable().row( $(this).parents('tr') ).data();
        var url="{{ path('apachecms_backend_customers_view',{ id: 'ENTITY_ID' })}}";
        location.href=url.replace('ENTITY_ID',data.id);
    });
</script>
{% endblock %}