<?php

namespace Apachecms\BackendBundle\Repository;

/**
 * CustomerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CustomerRepository extends \Doctrine\ORM\EntityRepository {

	public function getAll(){
		return $this->createQueryBuilder('e')
        ->select('e')
        ->where('e.isDelete = :isDelete')
		->setParameter('isDelete',false)
        ->orderBy("e.id","DESC");
	}
	public function listAll(){
        return $this->getAll()
        ->leftJoin('e.plan','p')
        ->select('e.id','e.email','e.picture','e.document','p.nameEs','e.profileIsComplete','e.isLocked','e.useTrial',"CONCAT(COALESCE(e.firstName,''),' ',COALESCE(e.lastName,'')) as c_name",'e.facebookId','e.googleId',"e.createdAt");
	}
	public function getUniqueNotDeleted(array $parameters){
        $explode=explode('@',$parameters['email']);
        $username=str_replace('.','',$explode[0]);
        $altEmail=$username.'@'.$explode[1];
        return $this->createQueryBuilder('e')
        ->select('e')
        ->where('e.isDelete = :isDelete')
        ->setParameter('isDelete',false)
        ->andWhere('e.email= :email OR e.email=:altEmail')
        ->setParameter('email',$parameters['email'])
        ->setParameter('altEmail',$altEmail)
        ->setMaxResults(1)->getQuery()->getResult();
    }
	public function usernameAvailable($username,$customer){
        return $this->createQueryBuilder('e')
        ->select('e')
        ->where('e.isDelete = :isDelete')
        ->setParameter('isDelete',false)
        ->andWhere('e.usernameUrl= :username')
        ->andWhere('e.id != :customer')
        ->setParameter('username',$username)
        ->setParameter('customer',$customer)
        ->setMaxResults(1);
    }
}
